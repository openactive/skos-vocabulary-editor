<%- published_param = concept.published? ? nil : "0" if defined?(concept) -%>

<%= sidebar do %>
  <% if defined?(concept) && false %>
    <%= sidebar_header t('txt.common.representations') %>
    <%= sidebar_item :icon => 'share', :text => 'HTML', :path => concept_path(:id => concept, :format => :html, :published => published_param) %>
    <%= sidebar_item :icon => 'share', :text => 'RDF/XML', :path => concept_path(:id => concept, :format => :rdf, :published => published_param), :id => 'rdf_link_xml' %>
    <%= sidebar_item :icon => 'share', :text => 'RDF/Turtle', :path => concept_path(:id => concept, :format => :ttl, :published => published_param), :id => 'rdf_link_ttl' %>
    <%= sidebar_item :icon => 'share', :text => 'RDF/NTriples', :path => concept_path(:id => concept, :format => :nt, :published => published_param), :id => 'rdf_link_nt' %>
  <% end %>

  <% if defined?(concept) %>
    <%= sidebar_header 'Contribute' %>
    <%= sidebar_item :icon => 'link', :text => 'Suggestions, updates and feedback', :path => ENV['VOCAB_SUGGESTIONS_LINK'] %>
  <% end %>

  <%= sidebar_header 'Links' %>
  <% if defined?(concept) %>
    <!-- <%= sidebar_item :icon => 'link', :text => t('txt.models.concept.uri'), :path => rdf_url(concept.origin, :format => nil, :published => published_param, :lang => nil) %> -->
    <%= sidebar_item :icon => 'link', :text => 'Concept @id', :path => "https://openactive.io/#{ENV['VOCAB_IDENTIFIER']}##{CGI.escapeHTML(concept.origin[1..-1])}" %>
  <% end %>

  <% (Iqvoc.first_level_classes - [Collection::SKOS::Unordered]).each do |klass| %>
    <%= sidebar_item { render(klass.new_link_partial_name) } %>
  <% end %>

<% end %>
